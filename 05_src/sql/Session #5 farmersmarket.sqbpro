<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="farmersmarket.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="7306"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="booth" custom_title="0" dock_id="1" table="4,5:mainbooth"/><dock_state state="000000ff00000000fd00000001000000020000000000000000fc0100000001fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000010100ffffff000000000000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings/></tab_browse><tab_sql><sql name="SQL 1*">-- INSERT UPDATE DELETE

--1)add a product to the table
--2) change the product_size for that product
--3) delete our product 

DROP TABLE IF EXISTS temp.product_expanded;
CREATE TEMP TABLE product_expanded AS
	SELECT * FROM product;
	
--INSERT
INSERT INTO product_expanded
VALUES(26,'Almonds','1 lb',1,'lbs');

--UPDATE
-- change the product_size for almonds to 1/2 kg
UPDATE product_expanded
SET product_size = '1/2 kg', product_qty_type = 'kg'
WHERE product_id = 26;

--DELETE our almonds
DELETE FROM product_expanded
--SELECT * FROM product_expanded
WHERE product_id = 26


--VIEW
DROP VIEW IF EXISTS vendor_daily_sales;
CREATE VIEW IF NOT EXISTS vendor_daily_sales AS

	SELECT 
	md.market_date
	,market_day
	,market_week
	,market_year
	,vendor_name
	,SUM(quantity*cost_to_customer_per_qty) as sales
	
	
	
	FROM market_date_info md
	INNER JOIN customer_purchases cp
		ON md.market_date = cp.market_date
	INNER JOIN vendor v
		ON cp.vendor_id = v.vendor_id
	
	GROUP BY cp.market_date, v.vendor_id
	
	
	
	
	
	
	
	-- INSERT UPDATE DELETE

--1)add a product to the table
--2) change the product_size for that product
--3) delete our product 

DROP TABLE IF EXISTS temp.product_expanded;
CREATE TEMP TABLE product_expanded AS
	SELECT * FROM product;
	
--INSERT
INSERT INTO product_expanded
VALUES(26,'Almonds','1 lb',1,'lbs');

--UPDATE
-- change the product_size for almonds to 1/2 kg
UPDATE product_expanded
SET product_size = '1/2 kg', product_qty_type = 'kg'
WHERE product_id = 26;

--DELETE our almonds
DELETE FROM product_expanded
--SELECT * FROM product_expanded
WHERE product_id = 26


--VIEW
DROP VIEW IF EXISTS vendor_daily_sales;
CREATE VIEW IF NOT EXISTS vendor_daily_sales AS

	SELECT 
	md.market_date
	,market_day
	,market_week
	,market_year
	,vendor_name
	,SUM(quantity*cost_to_customer_per_qty) as sales
	
	
	
	FROM market_date_info md
	INNER JOIN customer_purchases cp
		ON md.market_date = cp.market_date
	INNER JOIN vendor v
		ON cp.vendor_id = v.vendor_id
    
    
    --NEW VIEW
DROP VIEW IF EXISTS todays_vendor_daily_sales;
CREATE VIEW IF NOT EXISTS todays_vendor_daily_sales AS

	SELECT 
	md.market_date
	,market_day
	,market_week
	,market_year
	,vendor_name
	,SUM(quantity*cost_to_customer_per_qty) as sales
	
	FROM market_date_info md
	INNER JOIN (
		SELECT * FROM customer_purchases 
		UNION
		SELECT * FROM new_customer_purchases) cp
		
		ON md.market_date = cp.market_date
	INNER JOIN vendor v
		ON cp.vendor_id = v.vendor_id
	
	/*PICK ONE OF THE WHERE STATEMENTS!*/
	WHERE md.market_date = strftime('%Y-%m-%d',DATE('now'),'-1 day')-- today! -- 
	--WHERE md.market_date = DATE('now')
	--WHERE md.market_date = '2024-12-18'
	
	GROUP BY cp.market_date, v.vendor_id
  
  
 UPDATE new_customer_purchases
SET market_date = '2024-12-18'

INSERT INTO market_date_info
VALUES('2024-12-18','Wednesday','51','2024','8:00 AM','2:00 PM','nothing interesting','Winter','0','4',1,0)


SELECT * FROM todays_vendor_daily_sales

GROUP BY cp.market_date, v.vendor_id
	
	
	
	
-- INSERT UPDATE DELETE

--1)add a product to the table
--2) change the product_size for that product
--3) delete our product 

DROP TABLE IF EXISTS temp.product_expanded;
CREATE TEMP TABLE product_expanded AS
	SELECT * FROM product;
	
--INSERT
INSERT INTO product_expanded
VALUES(26,'Almonds','1 lb',1,'lbs');

--UPDATE
-- change the product_size for almonds to 1/2 kg
UPDATE product_expanded
SET product_size = '1/2 kg', product_qty_type = 'kg'
WHERE product_id = 26;

--DELETE our almonds
DELETE FROM product_expanded
--SELECT * FROM product_expanded
WHERE product_id = 26


--VIEW
DROP VIEW IF EXISTS vendor_daily_sales;
CREATE VIEW IF NOT EXISTS vendor_daily_sales AS

	SELECT 
	md.market_date
	,market_day
	,market_week
	,market_year
	,vendor_name
	,SUM(quantity*cost_to_customer_per_qty) as sales
	
	
	
	FROM market_date_info md
	INNER JOIN customer_purchases cp
		ON md.market_date = cp.market_date
	INNER JOIN vendor v
		ON cp.vendor_id = v.vendor_id
    
    
--NEW VIEW
DROP VIEW IF EXISTS todays_vendor_daily_sales;
CREATE VIEW IF NOT EXISTS todays_vendor_daily_sales AS

	SELECT 
	md.market_date
	,market_day
	,market_week
	,market_year
	,vendor_name
	,SUM(quantity*cost_to_customer_per_qty) as sales
	
	FROM market_date_info md
	INNER JOIN (
		SELECT * FROM customer_purchases 
		UNION
		SELECT * FROM new_customer_purchases) cp
		
		ON md.market_date = cp.market_date
	INNER JOIN vendor v
		ON cp.vendor_id = v.vendor_id
	
	/*PICK ONE OF THE WHERE STATEMENTS!*/
	--WHERE md.market_date = strftime('%Y-%m-%d',DATE('now'),'-1 day')-- today! -- 
	WHERE md.market_date = DATE('now','localtime')
	--WHERE md.market_date = '2024-12-18'
	
	GROUP BY cp.market_date, v.vendor_id


UPDATE new_customer_purchases
SET market_date =DATE('now','localtime')

INSERT INTO market_date_info
VALUES('2024-12-18','Wednesday','51','2024','8:00 AM','2:00 PM','nothing interesting','Winter','0','4',1,0)


SELECT * FROM todays_vendor_daily_sales

--JSON to a TABLE

--create a temp TABLE
--insert the json as a long string
--write a json_each statement
--use the json_each statement as a subquery to extract our column values
-- now we have a table! 

DROP TABLE IF EXISTS temp.[new_json];
CREATE TEMP TABLE IF NOT EXISTS temp.new_json
(
col1 BLOB
);

INSERT INTO temp.new_json
VALUES(
'[
    {
        &quot;country&quot;: &quot;Afghanistan&quot;,
        &quot;city&quot;: &quot;Kabul&quot;
    },
    {
        &quot;country&quot;: &quot;Albania&quot;,
        &quot;city&quot;: &quot;Tirana&quot;
    }]'
    );
    
SELECT key
,JSON_EXTRACT(value,'$.country') as country
,JSON_EXTRACT(value,'$.city') as city

FROM (
   SELECT * 
   FROM new_json,JSON_EACH(new_json.col1, '$')
 ) x


--CROSS JOIN

DROP TABLE IF EXISTS temp.sizes;
CREATE TEMP TABLE IF NOT EXISTS temp.sizes (size TEXT);

INSERT INTO temp.sizes
VALUES('small'),
('medium'),
('large');

SELECT * from temp.sizes;

SELECT product_name, size
FROM product
CROSS JOIN temp.sizes



	
	GROUP BY cp.market_date, v.vendor_id
	</sql><current_tab id="0"/></tab_sql></sqlb_project>
